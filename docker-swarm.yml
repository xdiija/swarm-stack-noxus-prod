version: "3.9"

services:
  web:
    image: xdiija/php82-app-2025:v1
    ports:
      - "80:80"
      - "443:443"
    volumes:
      # Nginx config with HTTPS server block
      - ./nginx-sites.conf:/etc/nginx/conf.d/default.conf:ro
      # Self-signed SSL certificate and key
      - /etc/ssl/certs/nginx-selfsigned.crt:/etc/ssl/certs/nginx-selfsigned.crt:ro
      - /etc/ssl/private/nginx-selfsigned.key:/etc/ssl/private/nginx-selfsigned.key:ro
    environment:
      REDIS_HOST: redis
      REDIS_PORT: 6379
      REDIS_PASSWORD: myStrongPassword123!
    networks:
      - app-network
    deploy:
      replicas: 1
      restart_policy:
        condition: on-failure
      placement:
        constraints:
          - node.role == manager
      resources:
        limits:
          cpus: "0.75"
          memory: 512M
      update_config:
        parallelism: 1
        delay: 10s

  db:
    image: mysql:5.7.22
    environment:
      MYSQL_DATABASE: ${DB_DATABASE:-laravel}
      MYSQL_ROOT_PASSWORD: ${DB_PASSWORD:-root}
      MYSQL_USER: ${DB_USERNAME:-root}
      MYSQL_PASSWORD: ${DB_PASSWORD:-root}
    volumes:
      - db_data:/var/lib/mysql
    ports:
      - "3388:3306"
    networks:
      - app-network
    deploy:
      replicas: 1
      restart_policy:
        condition: on-failure
      placement:
        constraints:
          - node.role == manager
      resources:
        limits:
          cpus: "0.5"
          memory: 512M

  redis:
    image: redis:7-alpine
    command: ["redis-server", "--requirepass", "myStrongPassword123!"]
    networks:
      - app-network
    deploy:
      replicas: 1
      restart_policy:
        condition: on-failure
      placement:
        constraints:
          - node.role == manager
      resources:
        limits:
          cpus: "0.25"
          memory: 128M
    healthcheck:
      test: ["CMD", "redis-cli", "--raw", "incr", "ping"]
      interval: 10s
      timeout: 3s
      retries: 5

networks:
  app-network:
    driver: overlay

volumes:
  db_data:
